{
  "extends": "@tsconfig/svelte/tsconfig.json",
  "exclude": ["node_modules", "**/node_modules", "dist", "**/dist", "tmp"],
  "include": ["src"],
  "compilerOptions": {
    "moduleResolution": "node",
    "lib": ["esnext", "DOM"],
    "target": "esnext",
    "module": "esnext",

    /**
      Svelte Preprocess cannot figure out whether you have a value or a type, so tell TypeScript
      to enforce using `import type` instead of `import` for Types.
     */
    "importsNotUsedAsValues": "error",
    "isolatedModules": true,
    "resolveJsonModule": true,
    "experimentalDecorators": true,
    "emitDecoratorMetadata": true,
    /**
      To have warnings/errors of the Svelte compiler at the correct position,
      enable source maps by default.
     */
    "sourceMap": true,
    /** Requests the runtime types from the svelte modules by default. Needed for TS files or else you get errors. */
    // "strict": false,
    "esModuleInterop": true,
    "skipLibCheck": true,
    "forceConsistentCasingInFileNames": true,
    "types": ["chrome", "svelte", "node"],

    "declaration": false,
    "importHelpers": true,
    "strictNullChecks": true,
    "skipDefaultLibCheck": true,
    "allowSyntheticDefaultImports": true,
    "allowUnreachableCode": false,
    "allowUnusedLabels": false,
    "noFallthroughCasesInSwitch": true,
    "noImplicitAny": true,
    "noImplicitReturns": true,
    "noImplicitThis": true,
    "noImplicitUseStrict": false,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "preserveConstEnums": true,
    "removeComments": true,
    "strict": true,
    "stripInternal": true,
    "baseUrl": ".",

    "paths": {
      "$components": ["src/lib/components"],
      "$components/*": ["src/lib/components/*"],
      "$libs/svelte": ["libs/svelte/src"]
    }
  }
}
